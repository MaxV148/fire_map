"""create_event_tags_table

Revision ID: 4cbd895e1134
Revises: dea2f88f0426
Create Date: 2025-03-25 21:48:11.392535

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4cbd895e1134'
down_revision: Union[str, None] = 'dea2f88f0426'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_tags',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id', 'tag_id')
    )
    op.drop_constraint('event_tag_id_fkey', 'event', type_='foreignkey')
    op.drop_column('event', 'tag_id')
    op.alter_column('tag', 'name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tag', 'name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.add_column('event', sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('event_tag_id_fkey', 'event', 'tag', ['tag_id'], ['id'])
    op.drop_table('event_tags')
    # ### end Alembic commands ###
