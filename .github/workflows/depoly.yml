name: Deploy to Feurix Server

on:
  push:
    branches:
      - main

env:
  DEPLOY_PATH: /var/www/feurix
  RELEASES_PATH: /var/www/feurix/releases

jobs:
  build-backend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Build backend with uv
        run: |
          cd backend
          uv build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: backend/dist/
          retention-days: 1

  deploy-backend:
    runs-on: ubuntu-latest
    environment: deployment
    needs: build-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up deployment variables
        run: |
          echo "RELEASE_NAME=$(date +%s)" >> $GITHUB_ENV
          echo "BACKEND_DIR=${{ env.RELEASES_PATH }}/${{ github.run_number }}/backend" >> $GITHUB_ENV
          echo "FRONTEND_DIR=${{ env.RELEASES_PATH }}/${{ github.run_number }}/frontend" >> $GITHUB_ENV

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: backend/dist/

      - name: Create directories on server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.PRIV_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ${{ env.BACKEND_DIR }}
            mkdir -p ${{ env.FRONTEND_DIR }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Upload backend to server
        run: |
          echo "${{ secrets.PRIV_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
      
          # Sicheres Eintragen des Host-Schlüssels zur Vermeidung von MITM
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      
          # Datei-Upload via rsync
          rsync -avz -e "ssh -i /tmp/deploy_key -p ${{ secrets.SSH_PORT }}" \
            ./backend/dist/ \
            ${{ secrets.DEPLOY_USER }}@${{ secrets.HOST }}:${{ env.BACKEND_DIR }}/dist/
      
          # Aufräumen
          rm -f /tmp/deploy_key


      - name: Install backend dependencies
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.PRIV_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ env.BACKEND_DIR }}
            
            # Install uv on server if not available
            if ! command -v uv &> /dev/null; then
              curl -LsSf https://astral.sh/uv/install.sh | sh
              source $HOME/.cargo/env
            fi
            
            # Install the built wheel from dist folder
            uv pip install --system dist/*.whl
            
            # Run database migrations
            #uv run alembic upgrade head

      - name: Upload frontend to server
        run: |
          # Upload frontend files
          rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./frontend/ ${{ secrets.DEPLOY_USER }}@${{ secrets.HOST }}:${{ env.FRONTEND_DIR }}

      - name: Build React frontend
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.PRIV_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ env.FRONTEND_DIR }}
            npm install
            npm run build
            sudo rm -rf /var/www/html/*
            sudo cp -r build/* /var/www/html/

      - name: Update current symlink
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.PRIV_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            ln -sfn ${{ env.RELEASE_DIR }} /var/www/feurix/current
